name: CI

on:
  push:
    branches: [main, master, develop, feature/*]
  pull_request:
    branches: [main, master, develop, feature/*]

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install flake8
          pip install coverage
      - name: Lint (flake8)
        run: flake8 .
      - name: Run tests (pytest)
        run: pytest --cov=app --cov-report=xml --cov-report=term-missing
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/coverage.xml
          flags: backend
          name: backend-coverage

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm install
      - name: Lint (eslint)
        run: npm run lint
      - name: Run tests
        run: npm run test:coverage
      - name: Build
        run: npm run build
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./frontend/coverage/lcov.info
          flags: frontend
          name: frontend-coverage

  notify:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    if: always()
    steps:
      - name: Notify Telegram
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
          STATUS: ${{ needs.backend.result == 'success' && needs.frontend.result == 'success' && '✅ УСПЕХ' || '❌ ОШИБКА' }}
          WORKFLOW: ${{ github.workflow }}
          REPO: ${{ github.repository }}
          BRANCH: ${{ github.ref_name }}
          COMMIT: ${{ github.sha }}
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          MSG="[$WORKFLOW] $STATUS\nRepo: $REPO\nBranch: $BRANCH\nCommit: $COMMIT\n[Подробнее]($RUN_URL)"
          curl -s -X POST https://api.telegram.org/bot$TG_BOT_TOKEN/sendMessage \
            -d chat_id=$TG_CHAT_ID \
            -d text="$MSG" \
            -d parse_mode=Markdown 