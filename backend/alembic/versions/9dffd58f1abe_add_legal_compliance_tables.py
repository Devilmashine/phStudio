"""add_legal_compliance_tables

Revision ID: 9dffd58f1abe
Revises: ea987c2aadc1
Create Date: 2025-08-26 15:33:13.102556

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9dffd58f1abe'
down_revision: Union[str, None] = 'ea987c2aadc1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('compliance_audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('user_identifier', sa.String(length=255), nullable=True),
    sa.Column('ip_address', postgresql.INET(), nullable=False),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('action_details', sa.JSON(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('retention_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('document_versions', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_logs_event_type', 'compliance_audit_logs', ['event_type'], unique=False)
    op.create_index('idx_audit_logs_ip', 'compliance_audit_logs', ['ip_address'], unique=False)
    op.create_index('idx_audit_logs_retention', 'compliance_audit_logs', ['retention_until'], unique=False)
    op.create_index('idx_audit_logs_timestamp', 'compliance_audit_logs', ['timestamp'], unique=False)
    op.create_index('idx_audit_logs_user', 'compliance_audit_logs', ['user_identifier'], unique=False)
    op.create_index(op.f('ix_compliance_audit_logs_id'), 'compliance_audit_logs', ['id'], unique=False)
    op.create_table('user_consents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_identifier', sa.String(length=255), nullable=False),
    sa.Column('consent_type', sa.String(length=50), nullable=False),
    sa.Column('consent_given', sa.Boolean(), nullable=False),
    sa.Column('consent_timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ip_address', postgresql.INET(), nullable=False),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('consent_version', sa.String(length=50), nullable=False),
    sa.Column('withdrawal_timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('legal_basis', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_consents_active', 'user_consents', ['consent_given'], unique=False)
    op.create_index('idx_user_consents_identifier', 'user_consents', ['user_identifier'], unique=False)
    op.create_index('idx_user_consents_ip', 'user_consents', ['ip_address'], unique=False)
    op.create_index('idx_user_consents_timestamp', 'user_consents', ['consent_timestamp'], unique=False)
    op.create_index('idx_user_consents_type', 'user_consents', ['consent_type'], unique=False)
    op.create_index(op.f('ix_user_consents_id'), 'user_consents', ['id'], unique=False)
    op.create_table('legal_documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_type', sa.String(length=50), nullable=False),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('published_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('effective_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('hash_signature', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_legal_documents_active', 'legal_documents', ['is_active'], unique=False)
    op.create_index('idx_legal_documents_effective', 'legal_documents', ['effective_date'], unique=False)
    op.create_index('idx_legal_documents_type', 'legal_documents', ['document_type'], unique=False)
    op.create_index('idx_legal_documents_version', 'legal_documents', ['version'], unique=False)
    op.create_index(op.f('ix_legal_documents_id'), 'legal_documents', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_legal_documents_id'), table_name='legal_documents')
    op.drop_index('idx_legal_documents_version', table_name='legal_documents')
    op.drop_index('idx_legal_documents_type', table_name='legal_documents')
    op.drop_index('idx_legal_documents_effective', table_name='legal_documents')
    op.drop_index('idx_legal_documents_active', table_name='legal_documents')
    op.drop_table('legal_documents')
    op.drop_index(op.f('ix_user_consents_id'), table_name='user_consents')
    op.drop_index('idx_user_consents_type', table_name='user_consents')
    op.drop_index('idx_user_consents_timestamp', table_name='user_consents')
    op.drop_index('idx_user_consents_ip', table_name='user_consents')
    op.drop_index('idx_user_consents_identifier', table_name='user_consents')
    op.drop_index('idx_user_consents_active', table_name='user_consents')
    op.drop_table('user_consents')
    op.drop_index(op.f('ix_compliance_audit_logs_id'), table_name='compliance_audit_logs')
    op.drop_index('idx_audit_logs_user', table_name='compliance_audit_logs')
    op.drop_index('idx_audit_logs_timestamp', table_name='compliance_audit_logs')
    op.drop_index('idx_audit_logs_retention', table_name='compliance_audit_logs')
    op.drop_index('idx_audit_logs_ip', table_name='compliance_audit_logs')
    op.drop_index('idx_audit_logs_event_type', table_name='compliance_audit_logs')
    op.drop_table('compliance_audit_logs')
    # ### end Alembic commands ###
