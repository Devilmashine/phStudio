"""Add missing user columns

Revision ID: ea987c2aadc1
Revises: c138143d1bf4
Create Date: 2025-08-25 23:46:48.937249

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ea987c2aadc1'
down_revision: Union[str, None] = 'c138143d1bf4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create the bookingstatus enum type first
    booking_status_enum = postgresql.ENUM('PENDING', 'CONFIRMED', 'CANCELLED', 'COMPLETED', name='bookingstatus')
    booking_status_enum.create(op.get_bind())
    
    op.add_column('bookings', sa.Column('people_count', sa.Integer(), nullable=False, server_default='1'))
    
    # Alter the status column with explicit conversion
    op.execute("ALTER TABLE bookings ALTER COLUMN status TYPE bookingstatus USING CASE status::text "
               "WHEN 'pending' THEN 'PENDING'::bookingstatus "
               "WHEN 'confirmed' THEN 'CONFIRMED'::bookingstatus "
               "WHEN 'cancelled' THEN 'CANCELLED'::bookingstatus "
               "WHEN 'completed' THEN 'COMPLETED'::bookingstatus "
               "ELSE 'PENDING'::bookingstatus END")
    
    op.alter_column('bookings', 'notes',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('bookings', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('bookings', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.drop_index(op.f('idx_bookings_phone'), table_name='bookings')
    op.create_index('idx_bookings_client_phone', 'bookings', ['client_phone'], unique=False)
    op.create_index('idx_bookings_created_at', 'bookings', ['created_at'], unique=False)
    op.create_index('idx_bookings_date', 'bookings', ['date'], unique=False)
    op.create_index('idx_bookings_phone_normalized', 'bookings', ['phone_normalized'], unique=False)
    op.add_column('clients', sa.Column('notes', sa.String(length=1000), nullable=True))
    op.add_column('clients', sa.Column('preferred_contact_method', sa.String(length=20), nullable=False, server_default='phone'))
    op.alter_column('clients', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.alter_column('clients', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.create_index('idx_clients_email', 'clients', ['email'], unique=False)
    op.create_index('idx_clients_name', 'clients', ['name'], unique=False)
    op.create_index('idx_clients_phone', 'clients', ['phone'], unique=False)
    op.add_column('gallery_images', sa.Column('category', sa.String(length=100), nullable=True))
    op.add_column('gallery_images', sa.Column('alt_text', sa.String(length=255), nullable=True))
    op.add_column('gallery_images', sa.Column('is_featured', sa.Boolean(), nullable=False, server_default='false'))
    op.add_column('gallery_images', sa.Column('sort_order', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('gallery_images', sa.Column('file_size', sa.Integer(), nullable=True))
    op.add_column('gallery_images', sa.Column('image_width', sa.Integer(), nullable=True))
    op.add_column('gallery_images', sa.Column('image_height', sa.Integer(), nullable=True))
    op.alter_column('gallery_images', 'uploaded_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.alter_column('gallery_images', 'description',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
    op.create_index('idx_gallery_category', 'gallery_images', ['category'], unique=False)
    op.create_index('idx_gallery_filename', 'gallery_images', ['filename'], unique=False)
    op.create_index('idx_gallery_uploaded_at', 'gallery_images', ['uploaded_at'], unique=False)
    op.create_unique_constraint(None, 'gallery_images', ['filename'])
    op.add_column('news', sa.Column('summary', sa.String(length=500), nullable=True))
    op.add_column('news', sa.Column('tags', sa.String(length=255), nullable=True))
    op.add_column('news', sa.Column('featured', sa.Boolean(), nullable=False, server_default='false'))
    
    # Alter the published column with explicit conversion
    op.execute("ALTER TABLE news ALTER COLUMN published TYPE BOOLEAN USING CASE published "
               "WHEN 1 THEN true "
               "WHEN 0 THEN false "
               "ELSE false END")
    
    op.alter_column('news', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.alter_column('news', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.create_index('idx_news_author', 'news', ['author_id'], unique=False)
    op.create_index('idx_news_created_at', 'news', ['created_at'], unique=False)
    op.create_index('idx_news_published', 'news', ['published'], unique=False)
    op.add_column('studio_settings', sa.Column('timezone', sa.String(length=50), nullable=False, server_default='UTC'))
    op.add_column('studio_settings', sa.Column('currency', sa.String(length=3), nullable=False, server_default='USD'))
    op.add_column('studio_settings', sa.Column('booking_confirmation_required', sa.Boolean(), nullable=False, server_default='false'))
    op.alter_column('studio_settings', 'description',
               existing_type=sa.VARCHAR(length=1024),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('studio_settings', 'contacts',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('studio_settings', 'prices',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('studio_settings', 'work_days',
               existing_type=sa.VARCHAR(length=1024),
               type_=sa.JSON(),
               existing_nullable=False)
    op.alter_column('studio_settings', 'holidays',
               existing_type=sa.VARCHAR(length=1024),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('studio_settings', 'base_price_per_hour',
               existing_type=sa.VARCHAR(length=32),
               type_=sa.Numeric(precision=10, scale=2),
               existing_nullable=False)
    op.alter_column('studio_settings', 'weekend_price_multiplier',
               existing_type=sa.VARCHAR(length=8),
               type_=sa.Numeric(precision=4, scale=2),
               existing_nullable=False)
    op.alter_column('studio_settings', 'telegram_notifications_enabled',
               existing_type=sa.VARCHAR(length=8),
               type_=sa.Boolean(),
               existing_nullable=False)
    op.alter_column('studio_settings', 'email_notifications_enabled',
               existing_type=sa.VARCHAR(length=8),
               type_=sa.Boolean(),
               existing_nullable=False)
    op.alter_column('studio_settings', 'min_booking_duration',
               existing_type=sa.VARCHAR(length=8),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('studio_settings', 'max_booking_duration',
               existing_type=sa.VARCHAR(length=8),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('studio_settings', 'advance_booking_days',
               existing_type=sa.VARCHAR(length=8),
               type_=sa.Integer(),
               existing_nullable=False)
    op.add_column('users', sa.Column('is_active', sa.String(length=5), nullable=False, server_default='true'))
    op.add_column('users', sa.Column('phone', sa.String(length=20), nullable=True))
    op.alter_column('users', 'created_at',
               existing_type=sa.VARCHAR(),
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.alter_column('users', 'last_login',
               existing_type=sa.VARCHAR(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.create_index('idx_users_ical_token', 'users', ['ical_token'], unique=False)
    op.create_index('idx_users_role', 'users', ['role'], unique=False)
    op.create_index('idx_users_username', 'users', ['username'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_users_username', table_name='users')
    op.drop_index('idx_users_role', table_name='users')
    op.drop_index('idx_users_ical_token', table_name='users')
    op.drop_index('idx_users_email', table_name='users')
    op.alter_column('users', 'last_login',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.VARCHAR(),
               nullable=True)
    op.drop_column('users', 'phone')
    op.drop_column('users', 'is_active')
    op.alter_column('studio_settings', 'advance_booking_days',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=8),
               existing_nullable=False)
    op.alter_column('studio_settings', 'max_booking_duration',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=8),
               existing_nullable=False)
    op.alter_column('studio_settings', 'min_booking_duration',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=8),
               existing_nullable=False)
    op.alter_column('studio_settings', 'email_notifications_enabled',
               existing_type=sa.Boolean(),
               type_=sa.VARCHAR(length=8),
               existing_nullable=False)
    op.alter_column('studio_settings', 'telegram_notifications_enabled',
               existing_type=sa.Boolean(),
               type_=sa.VARCHAR(length=8),
               existing_nullable=False)
    op.alter_column('studio_settings', 'weekend_price_multiplier',
               existing_type=sa.Numeric(precision=4, scale=2),
               type_=sa.VARCHAR(length=8),
               existing_nullable=False)
    op.alter_column('studio_settings', 'base_price_per_hour',
               existing_type=sa.Numeric(precision=10, scale=2),
               type_=sa.VARCHAR(length=32),
               existing_nullable=False)
    op.alter_column('studio_settings', 'holidays',
               existing_type=sa.JSON(),
               type_=sa.VARCHAR(length=1024),
               existing_nullable=True)
    op.alter_column('studio_settings', 'work_days',
               existing_type=sa.JSON(),
               type_=sa.VARCHAR(length=1024),
               existing_nullable=False)
    op.alter_column('studio_settings', 'prices',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('studio_settings', 'contacts',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('studio_settings', 'description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=1024),
               existing_nullable=True)
    op.drop_column('studio_settings', 'booking_confirmation_required')
    op.drop_column('studio_settings', 'currency')
    op.drop_column('studio_settings', 'timezone')
    op.drop_index('idx_news_published', table_name='news')
    op.drop_index('idx_news_created_at', table_name='news')
    op.drop_index('idx_news_author', table_name='news')
    
    # Revert the published column type change
    op.alter_column('news', 'published',
               existing_type=sa.Boolean(),
               type_=sa.INTEGER(),
               nullable=True)
    
    op.alter_column('news', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('news', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('news', 'featured')
    op.drop_column('news', 'tags')
    op.drop_column('news', 'summary')
    op.drop_constraint(None, 'gallery_images', type_='unique')
    op.drop_index('idx_gallery_uploaded_at', table_name='gallery_images')
    op.drop_index('idx_gallery_filename', table_name='gallery_images')
    op.drop_index('idx_gallery_category', table_name='gallery_images')
    op.alter_column('gallery_images', 'description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('gallery_images', 'uploaded_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('gallery_images', 'image_height')
    op.drop_column('gallery_images', 'image_width')
    op.drop_column('gallery_images', 'file_size')
    op.drop_column('gallery_images', 'sort_order')
    op.drop_column('gallery_images', 'is_featured')
    op.drop_column('gallery_images', 'alt_text')
    op.drop_column('gallery_images', 'category')
    op.drop_index('idx_clients_phone', table_name='clients')
    op.drop_index('idx_clients_name', table_name='clients')
    op.drop_index('idx_clients_email', table_name='clients')
    op.alter_column('clients', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('clients', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('clients', 'preferred_contact_method')
    op.drop_column('clients', 'notes')
    op.drop_index('idx_bookings_phone_normalized', table_name='bookings')
    op.drop_index('idx_bookings_date', table_name='bookings')
    op.drop_index('idx_bookings_created_at', table_name='bookings')
    op.drop_index('idx_bookings_client_phone', table_name='bookings')
    op.create_index(op.f('idx_bookings_phone'), 'bookings', ['phone_normalized'], unique=False)
    op.alter_column('bookings', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('bookings', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('bookings', 'notes',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    
    # Revert the status column type change
    op.alter_column('bookings', 'status',
               existing_type=postgresql.ENUM('PENDING', 'CONFIRMED', 'CANCELLED', 'COMPLETED', name='bookingstatus'),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    
    # Drop the bookingstatus enum type
    booking_status_enum = postgresql.ENUM('PENDING', 'CONFIRMED', 'CANCELLED', 'COMPLETED', name='bookingstatus')
    booking_status_enum.drop(op.get_bind())
    
    op.drop_column('bookings', 'people_count')
    # ### end Alembic commands ###